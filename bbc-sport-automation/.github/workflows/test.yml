name: BBC Sport Automation Tests

on:
  push:
    branches: [ main, develop ]
  pull_request:
    branches: [ main, develop ]
  schedule:
    # Run tests daily at 6 AM UTC
    - cron: '0 6 * * *'
  workflow_dispatch:

jobs:
  test:
    name: Run Tests on ${{ matrix.browser }}
    runs-on: ubuntu-latest
    timeout-minutes: 30
    
    strategy:
      fail-fast: false
      matrix:
        browser: [chromium, firefox, webkit]
    
    steps:
      - name: Checkout code
        uses: actions/checkout@v4
      
      - name: Setup Node.js
        uses: actions/setup-node@v4
        with:
          node-version: '18'
          cache: 'npm'
      
      - name: Install dependencies
        run: npm ci
      
      - name: Install Playwright browsers
        run: npx playwright install --with-deps ${{ matrix.browser }}
      
      - name: Run tests
        env:
          BROWSER: ${{ matrix.browser }}
          HEADLESS: true
          CI: true
        run: npm test
        continue-on-error: false
      
      - name: Upload test results
        if: always()
        uses: actions/upload-artifact@v4
        with:
          name: test-results-${{ matrix.browser }}
          path: |
            test-results/
            screenshots/
          retention-days: 30
      
      - name: Upload screenshots on failure
        if: failure()
        uses: actions/upload-artifact@v4
        with:
          name: screenshots-${{ matrix.browser }}-failure
          path: screenshots/
          retention-days: 7
      
      - name: Publish test report
        if: always()
        uses: dorny/test-reporter@v1
        with:
          name: Test Results - ${{ matrix.browser }}
          path: test-results/*.xml
          reporter: java-junit
          fail-on-error: false

  report:
    name: Generate Test Report
    needs: test
    runs-on: ubuntu-latest
    if: always()
    
    steps:
      - name: Download all artifacts
        uses: actions/download-artifact@v4
      
      - name: Display structure of downloaded files
        run: ls -R
      
      - name: Create summary report
        run: |
          echo "## Test Execution Summary" >> $GITHUB_STEP_SUMMARY
          echo "" >> $GITHUB_STEP_SUMMARY
          echo "Tests completed across multiple browsers" >> $GITHUB_STEP_SUMMARY
          echo "Check artifacts for detailed reports" >> $GITHUB_STEP_SUMMARY